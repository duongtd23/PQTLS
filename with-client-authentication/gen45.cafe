--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red inv45(init,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Hash .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (certVerM(r1,r1,r2,encH(priKey(r1),r3)) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cChangeCS(s,r1,r2,r3),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Hash .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (certVerM(r1,r1,r2,encH(priKey(r1),r3)) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cChangeCS(s,r1,r2,r3),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq sign(r11) = sign(ca,owner(r11),pubKey(r11)) .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (sign(r11) = sign(ca,owner(r11),pubKey(r11))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq (decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> CertTypes .
	op r2 : -> SignAlgs .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op r7 : -> ClPriKeyEx .
	op r8 : -> PqPriKey .
	op r9 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r4,r4,r3,clPubKeyEx(r7),pqPubKeyEn(r8),encH(priKey(r4),hParams(r5,r6,clPubKeyEx(r7),pqPubKeyEn(r8))),r9) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(certReq(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> CertTypes .
	op r2 : -> SignAlgs .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op r7 : -> ClPriKeyEx .
	op r8 : -> PqPriKey .
	op r9 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r4,r4,r3,clPubKeyEx(r7),pqPubKeyEn(r8),encH(priKey(r4),hParams(r5,r6,clPubKeyEx(r7),pqPubKeyEn(r8))),r9) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(certReq(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = true .
	eq sign(r11) = sign(ca,owner(r11),pubKey(r11)) .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = true .
	eq (sign(r11) = sign(ca,owner(r11),pubKey(r11))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq (decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = true .
	eq sign(r11) = sign(ca,owner(r11),pubKey(r11)) .
	eq (certVerM(r1,r1,r2,encH(priKey(r1),hFullHs(r1,r2,r3,r4,r5,r6,r8,r9,r10,r11,r12,r13,r14,r16,r17,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1))),clPubKeyEx(r18),encapsCipher(r13,r19)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = true .
	eq sign(r11) = sign(ca,owner(r11),pubKey(r11)) .
	eq (certVerM(r1,r1,r2,encH(priKey(r1),hFullHs(r1,r2,r3,r4,r5,r6,r8,r9,r10,r11,r12,r13,r14,r16,r17,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1))),clPubKeyEx(r18),encapsCipher(r13,r19)))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = true .
	eq (sign(r11) = sign(ca,owner(r11),pubKey(r11))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq (decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq ss(s,r1,r2,r5) = none .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq r1 = intruder .
	eq ss(s,intruder,r2,r5) = none .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq r1 = intruder .
	eq (ss(s,intruder,r2,r5) = none) = false .
	eq (ch2M(intruder,intruder,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,intruder,r3,r8,r5,cs(ss(s,intruder,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,intruder,encFin(prf-skey(ms(ss(s,intruder,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,intruder,r2,r5)),hAbbrHs(intruder,r2,r3,r4,r5,r6,r8,cs(ss(s,intruder,r2,r5)))))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq r1 = intruder .
	eq (ss(s,intruder,r2,r5) = none) = false .
	eq (ch2M(intruder,intruder,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,intruder,r3,r8,r5,cs(ss(s,intruder,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,intruder,encFin(prf-skey(ms(ss(s,intruder,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,intruder,r2,r5)),hAbbrHs(intruder,r2,r3,r4,r5,r6,r8,cs(ss(s,intruder,r2,r5)))))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq r1 = intruder .
	eq (ss(s,intruder,r2,r5) = none) = false .
	eq (ch2M(intruder,intruder,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,intruder,r3,r8,r5,cs(ss(s,intruder,r2,r5))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq r1 = intruder .
	eq (ss(s,intruder,r2,r5) = none) = false .
	eq (ch2M(intruder,intruder,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	eq ss(s,r1,intruder,r5) = none .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	eq (ss(s,r1,intruder,r5) = none) = false .
	eq (ch2M(r1,r1,intruder,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,intruder,r1,r3,r8,r5,cs(ss(s,r1,intruder,r5))) \in nw(s)) = true .
	eq (sf2M(r7,intruder,r1,encFin(prf-skey(ms(ss(s,r1,intruder,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,intruder,r5)),hAbbrHs(r1,intruder,r3,r4,r5,r6,r8,cs(ss(s,r1,intruder,r5)))))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	eq (ss(s,r1,intruder,r5) = none) = false .
	eq (ch2M(r1,r1,intruder,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,intruder,r1,r3,r8,r5,cs(ss(s,r1,intruder,r5))) \in nw(s)) = true .
	eq (sf2M(r7,intruder,r1,encFin(prf-skey(ms(ss(s,r1,intruder,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,intruder,r5)),hAbbrHs(r1,intruder,r3,r4,r5,r6,r8,cs(ss(s,r1,intruder,r5)))))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	eq (ss(s,r1,intruder,r5) = none) = false .
	eq (ch2M(r1,r1,intruder,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,intruder,r1,r3,r8,r5,cs(ss(s,r1,intruder,r5))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	eq (ss(s,r1,intruder,r5) = none) = false .
	eq (ch2M(r1,r1,intruder,r3,r4,r5,r6) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	eq ss(s,r2,r2,r5) = none .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	eq (ss(s,r2,r2,r5) = none) = false .
	eq (ch2M(r2,r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r2,r3,r8,r5,cs(ss(s,r2,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r2,encFin(prf-skey(ms(ss(s,r2,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r2,r2,r5)),hAbbrHs(r2,r2,r3,r4,r5,r6,r8,cs(ss(s,r2,r2,r5)))))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	eq (ss(s,r2,r2,r5) = none) = false .
	eq (ch2M(r2,r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r2,r3,r8,r5,cs(ss(s,r2,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r2,encFin(prf-skey(ms(ss(s,r2,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r2,r2,r5)),hAbbrHs(r2,r2,r3,r4,r5,r6,r8,cs(ss(s,r2,r2,r5)))))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	eq (ss(s,r2,r2,r5) = none) = false .
	eq (ch2M(r2,r2,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r2,r3,r8,r5,cs(ss(s,r2,r2,r5))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	eq (ss(s,r2,r2,r5) = none) = false .
	eq (ch2M(r2,r2,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5))) .
	eq sd2 = seedHs(r4,r8) .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5))) .
	eq sd2 = seedHs(r4,r8) .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5))) .
	eq sd2 = seedHs(r4,r8) .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5))) .
	eq sd2 = seedHs(r4,r8) .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq ms(ss(s,r1,r2,r5)) = prf-ms(((k & k2) || pqKey((k' & k2'),n2)),sd) .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),sd),seedHs(r4,r8)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),sd),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq (cf2M(r1,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),sd),seedHs(r4,r8)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),sd),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv27 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5))) .
	eq sd2 = seedHs(r4,r8) .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq ms(ss(s,r1,r2,r5)) = prf-ms(((k & k2) || pqKey((k' & k2'),n2)),sd) .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),sd),seedHs(r4,r8)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),sd),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq (cf2M(r1,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),sd),seedHs(r4,r8)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),sd),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = false .
	red inv27(s,r1,r2,k,k',k2,k2',r5,n2,sd,skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n)) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5))) .
	eq sd2 = seedHs(r4,r8) .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq ms(ss(s,r1,r2,r5)) = prf-ms(((k & k2) || pqKey((k' & k2'),n2)),sd) .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),sd),seedHs(r4,r8)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),sd),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5))) .
	eq sd2 = seedHs(r4,r8) .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ms(ss(s,r1,r2,r5)) = prf-ms(((k & k2) || pqKey((k' & k2'),n2)),sd)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5))) .
	eq sd2 = seedHs(r4,r8) .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5))) .
	eq (sd2 = seedHs(r4,r8)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq a1 = r1 .
	eq (b = r2) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq a = r1 .
	eq (a1 = r1) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq (a = r1) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in ur(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(chello(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in ur(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(chello(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq ss(s,r1,r2,r5) = none .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(chello2(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (r4 \in ur(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(chello2(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (r4 \in ur(s)) = false .
	eq (cs(ss(s,r1,r2,r5)) \in r6) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(chello2(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (r4 \in ur(s)) = false .
	eq (cs(ss(s,r1,r2,r5)) \in r6) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(chello2(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> ClPubKeyEx .
	op r7 : -> PqPubKey .
	op r8 : -> Cipher .
	op r9 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> ClPubKeyEx .
	op r7 : -> PqPubKey .
	op r8 : -> Cipher .
	op r9 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> ClPubKeyEx .
	op r7 : -> PqPubKey .
	op r8 : -> Cipher .
	op r9 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (skexM(r5,r4,r3,r6,r7,r8,r9) \in nw(s)) = true .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> ClPubKeyEx .
	op r7 : -> PqPubKey .
	op r8 : -> Cipher .
	op r9 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (skexM(r5,r4,r3,r6,r7,r8,r9) \in nw(s)) = true .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> ClPubKeyEx .
	op r7 : -> PqPubKey .
	op r8 : -> Cipher .
	op r9 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (skexM(r5,r4,r3,r6,r7,r8,r9) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in csign(nw(s))) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCCert(s,r1,r2,r3,r4),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in csign(nw(s))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCCert(s,r1,r2,r3,r4),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in csign(nw(s))) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCert(s,r1,r2,r3,r4),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in csign(nw(s))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCert(s,r1,r2,r3,r4),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> CertTypes .
	op r4 : -> SignAlgs .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCertReq(s,r1,r2,r3,r4),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> PubKey .
	op r10 : -> PqKemParams .
	op r11 : -> Rand .
	op r12 : -> CipherSuite .
	op r13 : -> Sid .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqCipher .
	op r19 : -> CertTypes .
	op r2 : -> Sign .
	op r20 : -> SignAlgs .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in csign(nw(s))) = true .
	eq (r4 \in csign(nw(s))) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCertVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> PubKey .
	op r10 : -> PqKemParams .
	op r11 : -> Rand .
	op r12 : -> CipherSuite .
	op r13 : -> Sid .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqCipher .
	op r19 : -> CertTypes .
	op r2 : -> Sign .
	op r20 : -> SignAlgs .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in csign(nw(s))) = true .
	eq (r4 \in csign(nw(s))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCertVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> PubKey .
	op r10 : -> PqKemParams .
	op r11 : -> Rand .
	op r12 : -> CipherSuite .
	op r13 : -> Sid .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqCipher .
	op r19 : -> CertTypes .
	op r2 : -> Sign .
	op r20 : -> SignAlgs .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in csign(nw(s))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCertVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq r1 = intruder .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = ((k & k2) || pqKey((k' & k2'),n2))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq (b = r2) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r1 .
	eq (a1 = intruder) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq (a = r1) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq r1 = intruder .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = ((k & k2) || pqKey((k' & k2'),n2))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq (b = r2) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq (a1 = intruder) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (a = r1) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq r1 = intruder .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = ((k & k2) || pqKey((k' & k2'),n2))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq (b = r2) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq (a1 = intruder) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (a = r1) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq r1 = intruder .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = ((k & k2) || pqKey((k' & k2'),n2))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq (b = r2) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq (a1 = intruder) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (a = r1) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq r1 = intruder .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = ((k & k2) || pqKey((k' & k2'),n2))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq (b = r2) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq (a1 = intruder) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (a = r1) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq r1 = intruder .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = ((k & k2) || pqKey((k' & k2'),n2))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq (b = r2) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq (a1 = intruder) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (a = r1) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq r1 = intruder .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = ((k & k2) || pqKey((k' & k2'),n2))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq (b = r2) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq (a1 = intruder) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (a = r1) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq r1 = intruder .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = ((k & k2) || pqKey((k' & k2'),n2))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq (b = r2) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq (a1 = intruder) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (a = r1) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq r1 = intruder .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv10 as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv10(s,r1,r2,k,k',k2',ci,n,n2) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (k2' \in upqk(s)) = false .
	eq (skexM(r2,r2,r1,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = ((k & k2) || pqKey((k' & k2'),n2))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq (b = r2) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq (a1 = intruder) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (a = r1) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkChangeCS(s,r1,r2),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkChello(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkChello2(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCkeyex2(s,r1,r2,r3,r4,r5),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCkeyex2(s,r1,r2,r3,r4,r5),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkCkeyex2(s,r1,r2,r3,r4,r5),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuite .
	op r6 : -> Sid .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkShello(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkShello2(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkShelloDone(s,r1,r2),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSkeyex2(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSkeyex2(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(fkSkeyex2(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(helloReq(s,r1,r2),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (cfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(leakHsK(s,r1,r2,r3,r4),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (cfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = false .
	eq (sfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(leakHsK(s,r1,r2,r3,r4),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (cfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = false .
	eq (sfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(leakHsK(s,r1,r2,r3,r4),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(leakLtK(s,r1),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(leakLtK(s,r1),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKey .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(leakPKE1(s,r1,r2,r3,r4,r5,r6,r7),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKey .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(leakPKE1(s,r1,r2,r3,r4,r5,r6,r7),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKey .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(leakPKE2(s,r1,r2,r3,r4,r5,r6,r7),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKey .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(leakPKE2(s,r1,r2,r3,r4,r5,r6,r7),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(leakPKE3(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(leakPKE3(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(leakPKE4(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(leakPKE4(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Cert .
	op r5 : -> ClPubKeyEx .
	op r6 : -> PqCipher .
	op r7 : -> Nat .
	op r8 : -> Cipher .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r1,r2,r3,r4) \in nw(s)) = true .
	eq (certVerM(r1,r2,r3,r8) \in nw(s)) = true .
	eq (cfM(r1,r2,r3,r8) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r5,r6,r7) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Cert .
	op r5 : -> ClPubKeyEx .
	op r6 : -> PqCipher .
	op r7 : -> Nat .
	op r8 : -> Cipher .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r1,r2,r3,r4) \in nw(s)) = true .
	eq (certVerM(r1,r2,r3,r8) \in nw(s)) = true .
	eq (cfM(r1,r2,r3,r8) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r5,r6,r7) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Cert .
	op r5 : -> ClPubKeyEx .
	op r6 : -> PqCipher .
	op r7 : -> Nat .
	op r8 : -> Cipher .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r1,r2,r3,r4) \in nw(s)) = true .
	eq (certVerM(r1,r2,r3,r8) \in nw(s)) = true .
	eq (cfM(r1,r2,r3,r8) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Cert .
	op r5 : -> ClPubKeyEx .
	op r6 : -> PqCipher .
	op r7 : -> Nat .
	op r8 : -> Cipher .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r1,r2,r3,r4) \in nw(s)) = true .
	eq (certVerM(r1,r2,r3,r8) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Cert .
	op r5 : -> ClPubKeyEx .
	op r6 : -> PqCipher .
	op r7 : -> Nat .
	op r8 : -> Cipher .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r1,r2,r3,r4) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Cert .
	op r5 : -> ClPubKeyEx .
	op r6 : -> PqCipher .
	op r7 : -> Nat .
	op r8 : -> Cipher .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (shDnM(r3,r3,r2) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (sh2M(r2,r2,r1,r3,r6,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sChangeCS2(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (sh2M(r2,r2,r1,r3,r6,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sChangeCS2(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuite .
	op r6 : -> Sid .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (shM(r2,r2,r1,r3,r4,r5,r6) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(scert(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuite .
	op r6 : -> Sid .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (shM(r2,r2,r1,r3,r4,r5,r6) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(scert(s,r1,r2,r3,r4,r5,r6),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccertM(r1,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r1,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r1,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccertM(r1,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r1,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r1,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccertM(r1,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r1,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccertM(r1,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r1,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccertM(r1,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r1,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (sign(r17) = sign(ca,owner(r17),pubKey(r17))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccertM(r1,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r1,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccertM(r1,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r1,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccertM(r1,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r1,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r18,r19,r20) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccertM(r1,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r1,r2,r3,r21) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccertM(r1,r2,r3,r17) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq ss(s,r2,r3,r6) = none .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r4,r8,r6,cs(ss(s,r2,r3,r6))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r4,r8,r6,cs(ss(s,r2,r3,r6))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4,r5,r6,r7,r8,r9,r10) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4,r5,r6,r7,r8,r9,r10) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq ss(s,r3,r4,r7) = none .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r3,r4,r7) = none) = false .
	eq (r1 \in ur(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r3,r4,r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s,r3,r4,r7)) \in r8) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r3,r4,r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s,r3,r4,r7)) \in r8) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7,r8) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r3,r4,r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s,r3,r4,r7)) \in r8) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> CertTypes .
	op r4 : -> SignAlgs .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (certReqM(r2,r2,r1,r3,r4) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(shelloDone(s,r1,r2,r3,r4),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> CertTypes .
	op r4 : -> SignAlgs .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (certReqM(r2,r2,r1,r3,r4) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(shelloDone(s,r1,r2,r3,r4),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq k2' = r2 .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq r4 = intruder .
	eq (chM(r3,intruder,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,intruder,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,intruder,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq r4 = intruder .
	eq (chM(r3,intruder,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,intruder,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,intruder,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq r4 = intruder .
	eq (chM(r3,intruder,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,intruder,r6,r10,r11,r12) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq r4 = intruder .
	eq (chM(r3,intruder,r5,r6,r7,r8,r9) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq (r4 = intruder) = false .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq (r4 = intruder) = false .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq (r4 = intruder) = false .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq (r4 = intruder) = false .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq r4 = r5 .
	eq (chM(r3,r5,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r5,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r5,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq r4 = r5 .
	eq (chM(r3,r5,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r5,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r5,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq r4 = r5 .
	eq (chM(r3,r5,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r5,r6,r10,r11,r12) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq r4 = r5 .
	eq (chM(r3,r5,r5,r6,r7,r8,r9) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (k2' \in upqk(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (k2' \in upqk(s)) = false .
	eq (r2 \in pqkLeaked(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (k2' \in upqk(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),n) \in nw(s)) = true .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true, use inv44' as a lemma
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (k2' \in upqk(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),n) \in nw(s)) = false .
	eq (cf2M(a1,r4,r5,encFin(prf-ckey(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),sd2),prf-cfin2(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),h))) \in nw(s)) = true .
	red inv44'(s,r4,r5,a1,(k2 & r1),r2,k2',sd,sd2,n2,h) implies inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (k2' \in upqk(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),n) \in nw(s)) = false .
	eq (cf2M(a1,r4,r5,encFin(prf-ckey(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),sd2),prf-cfin2(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),h))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq (time(s) = n) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (k2' = r2) = false .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq (ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2)))) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq (b = r5) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq (a = r4) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq (k' = r2) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k = r1) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = false .
	red inv45(s,a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) implies inv45(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,a1,k,k',k2,k2',sd,sd2,ci,h,n,n2) .
close

--> Time taken is 61812ms