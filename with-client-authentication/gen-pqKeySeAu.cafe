--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red pqKeySeAu(init,a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = true .
	eq sign(r11) = sign(ca,owner(r11),pubKey(r11)) .
	eq (ccertM(r1,r1,r2,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1)))) \in nw(s)) = true .
	eq (certVerM(r1,r1,r2,encH(priKey(r1),hFullHs(r1,r2,r3,r4,r5,r6,r8,r9,r10,r11,r12,r13,r14,r16,r17,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1))),clPubKeyEx(r18),encapsCipher(r13,r19)))) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = true .
	eq sign(r11) = sign(ca,owner(r11),pubKey(r11)) .
	eq (ccertM(r1,r1,r2,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1)))) \in nw(s)) = true .
	eq (certVerM(r1,r1,r2,encH(priKey(r1),hFullHs(r1,r2,r3,r4,r5,r6,r8,r9,r10,r11,r12,r13,r14,r16,r17,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1))),clPubKeyEx(r18),encapsCipher(r13,r19)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = true .
	eq sign(r11) = sign(ca,owner(r11),pubKey(r11)) .
	eq (ccertM(r1,r1,r2,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = true .
	eq (sign(r11) = sign(ca,owner(r11),pubKey(r11))) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq (decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq ss(s,r1,r2,r5) = none .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r9,r2,r1) \in nw(s)) = true .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r10,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r9,r2,r1) \in nw(s)) = true .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r10,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r9,r2,r1) \in nw(s)) = true .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r9,r2,r1) \in nw(s)) = true .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r9,r2,r1) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq sign(r11) = sign(ca,owner(r11),pubKey(r11)) .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (sign(r11) = sign(ca,owner(r11),pubKey(r11))) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq (decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r14,pubKey(r11)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ccert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> CertTypes .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPriKeyEx .
	op r14 : -> PqPriKey .
	op r15 : -> Nat .
	op r2 : -> SignAlgs .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (skexM(r5,r5,r4,clPubKeyEx(r13),pqPubKeyEn(r14),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r13),pqPubKeyEn(r14))),r15) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(certReq(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> CertTypes .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPriKeyEx .
	op r14 : -> PqPriKey .
	op r15 : -> Nat .
	op r2 : -> SignAlgs .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (skexM(r5,r5,r4,clPubKeyEx(r13),pqPubKeyEn(r14),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r13),pqPubKeyEn(r14))),r15) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(certReq(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> CertTypes .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPriKeyEx .
	op r14 : -> PqPriKey .
	op r15 : -> Nat .
	op r2 : -> SignAlgs .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(certReq(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> CertTypes .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPriKeyEx .
	op r14 : -> PqPriKey .
	op r15 : -> Nat .
	op r2 : -> SignAlgs .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(certReq(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> CertTypes .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPriKeyEx .
	op r14 : -> PqPriKey .
	op r15 : -> Nat .
	op r2 : -> SignAlgs .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(certReq(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = true .
	eq sign(r11) = sign(ca,owner(r11),pubKey(r11)) .
	eq (ccertM(r1,r1,r2,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1)))) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = true .
	eq sign(r11) = sign(ca,owner(r11),pubKey(r11)) .
	eq (ccertM(r1,r1,r2,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = true .
	eq (sign(r11) = sign(ca,owner(r11),pubKey(r11))) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq (decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(certVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = true .
	eq sign(r11) = sign(ca,owner(r11),pubKey(r11)) .
	eq (ccertM(r1,r1,r2,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1)))) \in nw(s)) = true .
	eq (certVerM(r1,r1,r2,encH(priKey(r1),hFullHs(r1,r2,r3,r4,r5,r6,r8,r9,r10,r11,r12,r13,r14,r16,r17,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1))),clPubKeyEx(r18),encapsCipher(r13,r19)))) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = true .
	eq sign(r11) = sign(ca,owner(r11),pubKey(r11)) .
	eq (ccertM(r1,r1,r2,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1)))) \in nw(s)) = true .
	eq (certVerM(r1,r1,r2,encH(priKey(r1),hFullHs(r1,r2,r3,r4,r5,r6,r8,r9,r10,r11,r12,r13,r14,r16,r17,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1))),clPubKeyEx(r18),encapsCipher(r13,r19)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = true .
	eq sign(r11) = sign(ca,owner(r11),pubKey(r11)) .
	eq (ccertM(r1,r1,r2,cert(r1,pubKey(r1),sign(ca,r1,pubKey(r1)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = true .
	eq (sign(r11) = sign(ca,owner(r11),pubKey(r11))) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r18),encapsCipher(r13,r19),r20) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq (decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (certReqM(r7,r2,r1,r16,r17) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> CertTypes .
	op r17 : -> SignAlgs .
	op r18 : -> ClPriKeyEx .
	op r19 : -> PqPriKey .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r20 > r15) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq ss(s,r1,r2,r5) = none .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (ccsM(r9,r2,r1) \in nw(s)) = true .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r10,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (ccsM(r9,r2,r1) \in nw(s)) = true .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r10,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (ccsM(r9,r2,r1) \in nw(s)) = true .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (ccsM(r9,r2,r1) \in nw(s)) = true .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (ccsM(r9,r2,r1) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r1,r1,r2) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in ur(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(chello(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in ur(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(chello(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq ss(s,r1,r2,r5) = none .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(chello2(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (r4 \in ur(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(chello2(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (r4 \in ur(s)) = false .
	eq (cs(ss(s,r1,r2,r5)) \in r6) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(chello2(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (r4 \in ur(s)) = false .
	eq (cs(ss(s,r1,r2,r5)) \in r6) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(chello2(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq a = b .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq a = intruder .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq b = intruder .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((r2 & k2'),n),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true, use inv33 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((r2 & k2'),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r2 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r2 & k2'),n)),sd),h))) \in nw(s)) = true .
	red inv33(s,kc,r2,k2',sd,sd2,n,sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r2 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r2 & k2'),n)),sd),h)))) implies pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((r2 & k2'),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r2 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r2 & k2'),n)),sd),h))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((r2 & k2'),n),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true, use inv33 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((r2 & k2'),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r2 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r2 & k2'),n)),sd),h))) \in nw(s)) = true .
	red inv33(s,kc,r2,k2',sd,sd2,n,sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r2 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r2 & k2'),n)),sd),h)))) implies pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((r2 & k2'),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r2 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r2 & k2'),n)),sd),h))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq (time(s) = n) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq k' = r2 .
	eq (r3 = intruder) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq a = b .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq a = intruder .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq b = intruder .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((k' & r2),n),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true, use inv33 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((k' & r2),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r2),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r2),n)),sd),h))) \in nw(s)) = true .
	red inv33(s,kc,k',r2,sd,sd2,n,sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r2),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r2),n)),sd),h)))) implies pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((k' & r2),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r2),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r2),n)),sd),h))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & r2),n),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true, use inv33 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & r2),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r2),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r2),n)),sd),h))) \in nw(s)) = true .
	red inv33(s,kc,k',r2,sd,sd2,n,sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r2),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r2),n)),sd),h)))) implies pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & r2),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r2),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r2),n)),sd),h))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq (time(s) = n) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	eq (ccertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,intruder,r18,r19) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = true .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r3 = intruder .
	eq (shDnM(r9,r4,intruder) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq (r3 = intruder) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq (k2' = r2) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (ccertM(r3,r3,r4,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq (sign(r13) = sign(ca,owner(r13),pubKey(r13))) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq (decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (certReqM(r9,r4,r3,r18,r19) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in csign(nw(s))) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCCert(s,r1,r2,r3,r4),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in csign(nw(s))) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCCert(s,r1,r2,r3,r4),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in csign(nw(s))) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCert(s,r1,r2,r3,r4),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in csign(nw(s))) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCert(s,r1,r2,r3,r4),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> CertTypes .
	op r4 : -> SignAlgs .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCertReq(s,r1,r2,r3,r4),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> PubKey .
	op r10 : -> PqKemParams .
	op r11 : -> Rand .
	op r12 : -> CipherSuite .
	op r13 : -> Sid .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqCipher .
	op r19 : -> CertTypes .
	op r2 : -> Sign .
	op r20 : -> SignAlgs .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in csign(nw(s))) = true .
	eq (r4 \in csign(nw(s))) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCertVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> PubKey .
	op r10 : -> PqKemParams .
	op r11 : -> Rand .
	op r12 : -> CipherSuite .
	op r13 : -> Sid .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqCipher .
	op r19 : -> CertTypes .
	op r2 : -> Sign .
	op r20 : -> SignAlgs .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in csign(nw(s))) = true .
	eq (r4 \in csign(nw(s))) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCertVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> PubKey .
	op r10 : -> PqKemParams .
	op r11 : -> Rand .
	op r12 : -> CipherSuite .
	op r13 : -> Sid .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqCipher .
	op r19 : -> CertTypes .
	op r2 : -> Sign .
	op r20 : -> SignAlgs .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in csign(nw(s))) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCertVerify(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkChangeCS(s,r1,r2),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkChello(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkChello2(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq k' = r4 .
	eq a = b .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq k' = r4 .
	eq (a = b) = false .
	eq a = intruder .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq b = intruder .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((r4 & k2'),n),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true, use inv33 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((r4 & k2'),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r4 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r4 & k2'),n)),sd),h))) \in nw(s)) = true .
	red inv33(s,kc,r4,k2',sd,sd2,n,sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r4 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r4 & k2'),n)),sd),h)))) implies pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((r4 & k2'),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r4 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r4 & k2'),n)),sd),h))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((r4 & k2'),n),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true, use inv33 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((r4 & k2'),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r4 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r4 & k2'),n)),sd),h))) \in nw(s)) = true .
	red inv33(s,kc,r4,k2',sd,sd2,n,sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r4 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r4 & k2'),n)),sd),h)))) implies pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((r4 & k2'),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r4 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r4 & k2'),n)),sd),h))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq (time(s) = n) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq a = b .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq a = intruder .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq b = intruder .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((k' & r4),n),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true, use inv33 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((k' & r4),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r4),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r4),n)),sd),h))) \in nw(s)) = true .
	red inv33(s,kc,k',r4,sd,sd2,n,sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r4),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r4),n)),sd),h)))) implies pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((k' & r4),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r4),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r4),n)),sd),h))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & r4),n),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true, use inv33 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & r4),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r4),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r4),n)),sd),h))) \in nw(s)) = true .
	red inv33(s,kc,k',r4,sd,sd2,n,sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r4),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r4),n)),sd),h)))) implies pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & r4),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r4),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r4),n)),sd),h))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq (time(s) = n) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (k' = r4) = false .
	eq (k2' = r4) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq k' = r4 .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex2(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq (k' = r4) = false .
	eq k2' = r4 .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex2(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq (k' = r4) = false .
	eq (k2' = r4) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex2(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex2(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkCkeyex2(s,r1,r2,r3,r4,r5),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKey .
	op r17 : -> Cipher .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuite .
	op r6 : -> Sid .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkShello(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkShello2(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkShelloDone(s,r1,r2),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq k' = r4 .
	eq a = b .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq k' = r4 .
	eq (a = b) = false .
	eq a = intruder .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq b = intruder .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((r4 & k2'),n),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true, use inv33 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((r4 & k2'),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r4 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r4 & k2'),n)),sd),h))) \in nw(s)) = true .
	red inv33(s,kc,r4,k2',sd,sd2,n,sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r4 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r4 & k2'),n)),sd),h)))) implies pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((r4 & k2'),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r4 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r4 & k2'),n)),sd),h))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((r4 & k2'),n),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true, use inv33 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((r4 & k2'),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r4 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r4 & k2'),n)),sd),h))) \in nw(s)) = true .
	red inv33(s,kc,r4,k2',sd,sd2,n,sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r4 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r4 & k2'),n)),sd),h)))) implies pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((r4 & k2'),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r4 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r4 & k2'),n)),sd),h))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq k' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq (time(s) = n) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq a = b .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq a = intruder .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq b = intruder .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((k' & r4),n),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true, use inv33 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((k' & r4),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r4),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r4),n)),sd),h))) \in nw(s)) = true .
	red inv33(s,kc,k',r4,sd,sd2,n,sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r4),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r4),n)),sd),h)))) implies pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((k' & r4),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r4),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r4),n)),sd),h))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & r4),n),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true, use inv33 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & r4),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r4),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r4),n)),sd),h))) \in nw(s)) = true .
	red inv33(s,kc,k',r4,sd,sd2,n,sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r4),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r4),n)),sd),h)))) implies pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r4 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & r4),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r4),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r4),n)),sd),h))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (k' = r4) = false .
	eq k2' = r4 .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq (time(s) = n) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (k' = r4) = false .
	eq (k2' = r4) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq k' = r4 .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex2(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq (k' = r4) = false .
	eq k2' = r4 .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex2(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq (k' = r4) = false .
	eq (k2' = r4) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex2(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex2(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(fkSkeyex2(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(helloReq(s,r1,r2),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (cfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(leakHsK(s,r1,r2,r3,r4),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (cfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = false .
	eq (sfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(leakHsK(s,r1,r2,r3,r4),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (cfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = false .
	eq (sfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(leakHsK(s,r1,r2,r3,r4),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(leakLtK(s,r1),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq a = r1 .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(leakLtK(s,r1),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (a = r1) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(leakLtK(s,r1),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKey .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(leakPKE1(s,r1,r2,r3,r4,r5,r6,r7),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKey .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(leakPKE1(s,r1,r2,r3,r4,r5,r6,r7),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKey .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(leakPKE2(s,r1,r2,r3,r4,r5,r6,r7),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKey .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(leakPKE2(s,r1,r2,r3,r4,r5,r6,r7),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(leakPKE3(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(leakPKE3(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(leakPKE4(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(leakPKE4(s,r1,r2,r3,r4,r5,r6),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (sign(r17) = sign(ca,owner(r17),pubKey(r17))) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq ss(s,r2,r3,r6) = none .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r4,r8,r6,cs(ss(s,r2,r3,r6))) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r4,r8,r6,cs(ss(s,r2,r3,r6))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(scert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(scert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(scert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq r2 = intruder .
	eq (ccsM(r16,intruder,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,intruder) \in nw(s)) = true .
	eq (shDnM(r3,r3,intruder) \in nw(s)) = true .
	eq (ccertM(r16,intruder,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,intruder,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,intruder,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,intruder,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,intruder,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,intruder,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,intruder,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r16,intruder,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(intruder,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq r2 = intruder .
	eq (ccsM(r16,intruder,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,intruder) \in nw(s)) = true .
	eq (shDnM(r3,r3,intruder) \in nw(s)) = true .
	eq (ccertM(r16,intruder,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,intruder,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,intruder,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,intruder,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,intruder,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,intruder,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,intruder,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r16,intruder,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(intruder,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq r2 = intruder .
	eq (ccsM(r16,intruder,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,intruder) \in nw(s)) = true .
	eq (shDnM(r3,r3,intruder) \in nw(s)) = true .
	eq (ccertM(r16,intruder,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,intruder,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,intruder,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,intruder,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,intruder,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,intruder,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,intruder,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq r2 = intruder .
	eq (ccsM(r16,intruder,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,intruder) \in nw(s)) = true .
	eq (shDnM(r3,r3,intruder) \in nw(s)) = true .
	eq (ccertM(r16,intruder,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,intruder,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,intruder,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,intruder,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,intruder,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,intruder,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq r2 = intruder .
	eq (ccsM(r16,intruder,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,intruder) \in nw(s)) = true .
	eq (shDnM(r3,r3,intruder) \in nw(s)) = true .
	eq (ccertM(r16,intruder,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,intruder,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,intruder,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,intruder,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,intruder,r4,r8,r9,r10) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq r2 = intruder .
	eq (ccsM(r16,intruder,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,intruder) \in nw(s)) = true .
	eq (shDnM(r3,r3,intruder) \in nw(s)) = true .
	eq (ccertM(r16,intruder,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,intruder,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,intruder,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,intruder,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq r2 = intruder .
	eq (ccsM(r16,intruder,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,intruder) \in nw(s)) = true .
	eq (shDnM(r3,r3,intruder) \in nw(s)) = true .
	eq (ccertM(r16,intruder,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,intruder,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,intruder,r3,r18,r19,r20) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq r2 = intruder .
	eq (ccsM(r16,intruder,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,intruder) \in nw(s)) = true .
	eq (shDnM(r3,r3,intruder) \in nw(s)) = true .
	eq (ccertM(r16,intruder,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,intruder,r3,r21) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq r2 = intruder .
	eq (ccsM(r16,intruder,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,intruder) \in nw(s)) = true .
	eq (shDnM(r3,r3,intruder) \in nw(s)) = true .
	eq (ccertM(r16,intruder,r3,r17) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq r2 = intruder .
	eq (ccsM(r16,intruder,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,intruder) \in nw(s)) = true .
	eq (shDnM(r3,r3,intruder) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq r2 = intruder .
	eq (ccsM(r16,intruder,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,intruder) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq r2 = intruder .
	eq (ccsM(r16,intruder,r3) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq r3 = intruder .
	eq (ccsM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccsM(r16,r2,intruder) \in nw(s)) = true .
	eq (shDnM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,intruder,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,intruder,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,intruder,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,intruder,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(intruder,intruder,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r2,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (skexM(intruder,intruder,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(intruder),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r16,r2,intruder,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,intruder,r4,r5,r6,r7,r8,r9,r10,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(intruder),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq r3 = intruder .
	eq (ccsM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccsM(r16,r2,intruder) \in nw(s)) = true .
	eq (shDnM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,intruder,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,intruder,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,intruder,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,intruder,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(intruder,intruder,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r2,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (skexM(intruder,intruder,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(intruder),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r16,r2,intruder,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,intruder,r4,r5,r6,r7,r8,r9,r10,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(intruder),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq r3 = intruder .
	eq (ccsM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccsM(r16,r2,intruder) \in nw(s)) = true .
	eq (shDnM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,intruder,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,intruder,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,intruder,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,intruder,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(intruder,intruder,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r2,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (skexM(intruder,intruder,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(intruder),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq r3 = intruder .
	eq (ccsM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccsM(r16,r2,intruder) \in nw(s)) = true .
	eq (shDnM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,intruder,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,intruder,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,intruder,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,intruder,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(intruder,intruder,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r2,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq r3 = intruder .
	eq (ccsM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccsM(r16,r2,intruder) \in nw(s)) = true .
	eq (shDnM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,intruder,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,intruder,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,intruder,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,intruder,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(intruder,intruder,r2,r4,r8,r9,r10) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq r3 = intruder .
	eq (ccsM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccsM(r16,r2,intruder) \in nw(s)) = true .
	eq (shDnM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,intruder,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,intruder,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,intruder,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,intruder,r4,r5,r6,r7) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq r3 = intruder .
	eq (ccsM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccsM(r16,r2,intruder) \in nw(s)) = true .
	eq (shDnM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,intruder,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,intruder,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,intruder,r18,r19,r20) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq r3 = intruder .
	eq (ccsM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccsM(r16,r2,intruder) \in nw(s)) = true .
	eq (shDnM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,intruder,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,intruder,r21) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq r3 = intruder .
	eq (ccsM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccsM(r16,r2,intruder) \in nw(s)) = true .
	eq (shDnM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,intruder,r17) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq r3 = intruder .
	eq (ccsM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccsM(r16,r2,intruder) \in nw(s)) = true .
	eq (shDnM(intruder,intruder,r2) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq r3 = intruder .
	eq (ccsM(intruder,intruder,r2) \in nw(s)) = true .
	eq (ccsM(r16,r2,intruder) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq r3 = intruder .
	eq (ccsM(intruder,intruder,r2) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq r2 = r3 .
	eq (ccsM(r16,r3,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r3) \in nw(s)) = true .
	eq (ccertM(r16,r3,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r3,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r3,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r3,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r3,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r3,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r3,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r16,r3,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r3,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq r2 = r3 .
	eq (ccsM(r16,r3,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r3) \in nw(s)) = true .
	eq (ccertM(r16,r3,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r3,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r3,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r3,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r3,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r3,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r3,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r16,r3,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r3,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq r2 = r3 .
	eq (ccsM(r16,r3,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r3) \in nw(s)) = true .
	eq (ccertM(r16,r3,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r3,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r3,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r3,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r3,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r3,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r3,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq r2 = r3 .
	eq (ccsM(r16,r3,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r3) \in nw(s)) = true .
	eq (ccertM(r16,r3,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r3,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r3,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r3,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r3,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r3,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq r2 = r3 .
	eq (ccsM(r16,r3,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r3) \in nw(s)) = true .
	eq (ccertM(r16,r3,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r3,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r3,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r3,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r3,r4,r8,r9,r10) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq r2 = r3 .
	eq (ccsM(r16,r3,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r3) \in nw(s)) = true .
	eq (ccertM(r16,r3,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r3,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r3,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r3,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq r2 = r3 .
	eq (ccsM(r16,r3,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r3) \in nw(s)) = true .
	eq (ccertM(r16,r3,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r3,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r3,r3,r18,r19,r20) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq r2 = r3 .
	eq (ccsM(r16,r3,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r3) \in nw(s)) = true .
	eq (ccertM(r16,r3,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r3,r3,r21) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq r2 = r3 .
	eq (ccsM(r16,r3,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r3) \in nw(s)) = true .
	eq (ccertM(r16,r3,r3,r17) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq r2 = r3 .
	eq (ccsM(r16,r3,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r3) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq r2 = r3 .
	eq (ccsM(r16,r3,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r3) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq r2 = r3 .
	eq (ccsM(r16,r3,r3) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq (r2 = r3) = false .
	eq kc = (r11 & priClKey(r18)) .
	eq h = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq r19 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r16,r2,r3,r18,encapsCipher(pqPubKeyEn(r12),k2'),r20) \in nw(s)) = true .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq sd2 = seedHs(r5,r8) .
	eq (k2' \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq (r2 = r3) = false .
	eq kc = (r11 & priClKey(r18)) .
	eq h = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq r19 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r16,r2,r3,r18,encapsCipher(pqPubKeyEn(r12),k2'),r20) \in nw(s)) = true .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq sd2 = seedHs(r5,r8) .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r12 \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq (r2 = r3) = false .
	eq kc = (r11 & priClKey(r18)) .
	eq h = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq r19 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r16,r2,r3,r18,encapsCipher(pqPubKeyEn(r12),k2'),r20) \in nw(s)) = true .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq sd2 = seedHs(r5,r8) .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r12 \in pqkLeaked(s)) = false .
	eq (priKey(r2) \in' ltkLeaked(s)) = true .
	eq (r20 > timeLeak(priKey(r2),ltkLeaked(s))) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq (r2 = r3) = false .
	eq kc = (r11 & priClKey(r18)) .
	eq h = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq r19 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r16,r2,r3,r18,encapsCipher(pqPubKeyEn(r12),k2'),r20) \in nw(s)) = true .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq sd2 = seedHs(r5,r8) .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r12 \in pqkLeaked(s)) = false .
	eq (priKey(r2) \in' ltkLeaked(s)) = true .
	eq (r20 > timeLeak(priKey(r2),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((r12 & k2'),r20),nw(s)) = true .
	eq (sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true, use inv34 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq (r2 = r3) = false .
	eq kc = (r11 & priClKey(r18)) .
	eq h = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq r19 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r16,r2,r3,r18,encapsCipher(pqPubKeyEn(r12),k2'),r20) \in nw(s)) = true .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq sd2 = seedHs(r5,r8) .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r12 \in pqkLeaked(s)) = false .
	eq (priKey(r2) \in' ltkLeaked(s)) = true .
	eq (r20 > timeLeak(priKey(r2),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((r12 & k2'),r20),nw(s)) = true .
	eq (sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = false .
	red inv34(s,a,b,r16,r11,k',r18,k2',r5,r8,r21,r17,r13,n) implies pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq (r2 = r3) = false .
	eq kc = (r11 & priClKey(r18)) .
	eq h = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq r19 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r16,r2,r3,r18,encapsCipher(pqPubKeyEn(r12),k2'),r20) \in nw(s)) = true .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq sd2 = seedHs(r5,r8) .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r12 \in pqkLeaked(s)) = false .
	eq (priKey(r2) \in' ltkLeaked(s)) = true .
	eq (r20 > timeLeak(priKey(r2),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((r12 & k2'),r20),nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq (r2 = r3) = false .
	eq kc = (r11 & priClKey(r18)) .
	eq h = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq r19 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r16,r2,r3,r18,encapsCipher(pqPubKeyEn(r12),k2'),r20) \in nw(s)) = true .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq sd2 = seedHs(r5,r8) .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r12 \in pqkLeaked(s)) = false .
	eq (priKey(r2) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((r12 & k2'),r20),nw(s)) = true .
	eq (sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true, use inv34 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq (r2 = r3) = false .
	eq kc = (r11 & priClKey(r18)) .
	eq h = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq r19 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r16,r2,r3,r18,encapsCipher(pqPubKeyEn(r12),k2'),r20) \in nw(s)) = true .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq sd2 = seedHs(r5,r8) .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r12 \in pqkLeaked(s)) = false .
	eq (priKey(r2) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((r12 & k2'),r20),nw(s)) = true .
	eq (sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = false .
	red inv34(s,a,b,r16,r11,k',r18,k2',r5,r8,r21,r17,r13,n) implies pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq (r2 = r3) = false .
	eq kc = (r11 & priClKey(r18)) .
	eq h = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq r19 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r16,r2,r3,r18,encapsCipher(pqPubKeyEn(r12),k2'),r20) \in nw(s)) = true .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq sd2 = seedHs(r5,r8) .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r12 \in pqkLeaked(s)) = false .
	eq (priKey(r2) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((r12 & k2'),r20),nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq (r2 = r3) = false .
	eq kc = (r11 & priClKey(r18)) .
	eq h = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq r19 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r16,r2,r3,r18,encapsCipher(pqPubKeyEn(r12),k2'),r20) \in nw(s)) = true .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (sd2 = seedHs(r5,r8)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq (r2 = r3) = false .
	eq kc = (r11 & priClKey(r18)) .
	eq h = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq r19 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r16,r2,r3,r18,encapsCipher(pqPubKeyEn(r12),k2'),r20) \in nw(s)) = true .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq (sd = seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq (r2 = r3) = false .
	eq kc = (r11 & priClKey(r18)) .
	eq h = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq r19 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r16,r2,r3,r18,encapsCipher(pqPubKeyEn(r12),k2'),r20) \in nw(s)) = true .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey((r12 & k2'),r20)),seedMs(r5,r8,r18,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq (r2 = r3) = false .
	eq kc = (r11 & priClKey(r18)) .
	eq h = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq r19 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r16,r2,r3,r18,encapsCipher(pqPubKeyEn(r12),k2'),r20) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq (r2 = r3) = false .
	eq kc = (r11 & priClKey(r18)) .
	eq h = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (r19 = encapsCipher(pqPubKeyEn(r12),k2')) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq (r2 = r3) = false .
	eq kc = (r11 & priClKey(r18)) .
	eq (h = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq b = r3 .
	eq (r2 = intruder) = false .
	eq (r3 = intruder) = false .
	eq (r2 = r3) = false .
	eq (kc = (r11 & priClKey(r18))) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq a = r2 .
	eq (b = r3) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq k' = r12 .
	eq (a = r2) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq n = r20 .
	eq (k' = r12) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = true .
	eq (n = r20) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19) .
	eq (cfM(r16,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r18)) || pqKey(decaps(r19,r12),r20)),seedMs(r5,r8,r18,r19)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (decH(r21,pubKey(r17)) = hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15,r17,r18,r19)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca,owner(r17),pubKey(r17)) .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (sign(r17) = sign(ca,owner(r17),pubKey(r17))) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = true .
	eq (ckexM(r16,r2,r3,r18,r19,r20) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = true .
	eq (certVerM(r16,r2,r3,r21) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ccertM(r16,r2,r3,r17) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = true .
	eq (ccsM(r16,r2,r3) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> ClPubKeyEx .
	op r19 : -> PqCipher .
	op r2 : -> Prin .
	op r20 : -> Nat .
	op r21 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r21,pubKey(r17)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq ss(s,r2,r3,r6) = none .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r4,r8,r6,cs(ss(s,r2,r3,r6))) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r4,r8,r6,cs(ss(s,r2,r3,r6))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ccsM(r3,r3,r2) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4,r5,r6,r7,r8,r9,r10) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4,r5,r6,r7,r8,r9,r10) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq ss(s,r3,r4,r7) = none .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r3,r4,r7) = none) = false .
	eq (r1 \in ur(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r3,r4,r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s,r3,r4,r7)) \in r8) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r3,r4,r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s,r3,r4,r7)) \in r8) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7,r8) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r3,r4,r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s,r3,r4,r7)) \in r8) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(shelloDone(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(shelloDone(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(shelloDone(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(shelloDone(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(shelloDone(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq a = b .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq a = intruder .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq b = intruder .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((r2 & k2'),n),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true, use inv33 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((r2 & k2'),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r2 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r2 & k2'),n)),sd),h))) \in nw(s)) = true .
	red inv33(s,kc,r2,k2',sd,sd2,n,sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r2 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r2 & k2'),n)),sd),h)))) implies pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((r2 & k2'),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r2 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r2 & k2'),n)),sd),h))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((r2 & k2'),n),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true, use inv33 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((r2 & k2'),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r2 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r2 & k2'),n)),sd),h))) \in nw(s)) = true .
	red inv33(s,kc,r2,k2',sd,sd2,n,sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r2 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r2 & k2'),n)),sd),h)))) implies pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((r2 & k2'),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((r2 & k2'),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((r2 & k2'),n)),sd),h))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq (time(s) = n) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k' = r2 .
	eq (r5 = intruder) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq a = b .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq a = intruder .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq b = intruder .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((k' & r2),n),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true, use inv33 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((k' & r2),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r2),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r2),n)),sd),h))) \in nw(s)) = true .
	red inv33(s,kc,k',r2,sd,sd2,n,sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r2),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r2),n)),sd),h)))) implies pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = true .
	eq (n > timeLeak(priKey(a),ltkLeaked(s))) = false .
	eq existPqPriKexM(pqKey((k' & r2),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r2),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r2),n)),sd),h))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & r2),n),nw(s)) = true .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true, use inv33 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & r2),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r2),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r2),n)),sd),h))) \in nw(s)) = true .
	red inv33(s,kc,k',r2,sd,sd2,n,sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r2),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r2),n)),sd),h)))) implies pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq time(s) = n .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(a) \in' ltkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & r2),n),nw(s)) = false .
	eq (sfM(b,b,a,encFin(prf-skey(prf-ms((kc || pqKey((k' & r2),n)),sd),sd2),prf-sfin(prf-ms((kc || pqKey((k' & r2),n)),sd),h))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	eq (a = b) = false .
	eq (a = intruder) = false .
	eq (b = intruder) = false .
	eq (time(s) = n) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq k2' = r2 .
	eq (r5 = intruder) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k' = r2) = false .
	eq (k2' = r2) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKey .
	op k2' : -> PqPriKey .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = false .
	red pqKeySeAu(s,a,b,kc,k',k2',sd,sd2,h,n) implies pqKeySeAu(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,kc,k',k2',sd,sd2,h,n) .
close

--> Time taken is 27357ms