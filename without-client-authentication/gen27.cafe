--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	red inv27(init,a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r16),encapsCipher(r13,r17),r18) \in nw(s)) = true .
	eq sign(r11) = sign(ca,owner(r11),pubKey(r11)) .
	eq m = ccsM(r1,r1,r2) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r16),encapsCipher(r13,r17),r18) \in nw(s)) = true .
	eq sign(r11) = sign(ca,owner(r11),pubKey(r11)) .
	eq (m = ccsM(r1,r1,r2)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r16),encapsCipher(r13,r17),r18) \in nw(s)) = true .
	eq (sign(r11) = sign(ca,owner(r11),pubKey(r11))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r16),encapsCipher(r13,r17),r18) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq (decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq ss(s,r1,r2,r5) = none .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r9,r2,r1) \in nw(s)) = true .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r10,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq m = ccsM(r1,r1,r2) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r9,r2,r1) \in nw(s)) = true .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r10,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq (m = ccsM(r1,r1,r2)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r9,r2,r1) \in nw(s)) = true .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r10,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r9,r2,r1) \in nw(s)) = true .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r9,r2,r1) \in nw(s)) = true .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r9,r2,r1) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r16),encapsCipher(r13,r17),r18) \in nw(s)) = true .
	eq sign(r11) = sign(ca,owner(r11),pubKey(r11)) .
	eq m = cfM(r1,r1,r2,encFin(prf-ckey(prf-ms(((r16 & priClKey(r12)) || pqKey((priPqKey(r13) & r17),r18)),seedMs(r4,r8,clPubKeyEx(r16),encapsCipher(r13,r17))),seedHs(r4,r8)),prf-cfin(prf-ms(((r16 & priClKey(r12)) || pqKey((priPqKey(r13) & r17),r18)),seedMs(r4,r8,clPubKeyEx(r16),encapsCipher(r13,r17))),hFullHs(r1,r2,r3,r4,r5,r6,r8,r9,r10,r11,r12,r13,r14,clPubKeyEx(r16),encapsCipher(r13,r17))))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r16),encapsCipher(r13,r17),r18) \in nw(s)) = true .
	eq sign(r11) = sign(ca,owner(r11),pubKey(r11)) .
	eq (m = cfM(r1,r1,r2,encFin(prf-ckey(prf-ms(((r16 & priClKey(r12)) || pqKey((priPqKey(r13) & r17),r18)),seedMs(r4,r8,clPubKeyEx(r16),encapsCipher(r13,r17))),seedHs(r4,r8)),prf-cfin(prf-ms(((r16 & priClKey(r12)) || pqKey((priPqKey(r13) & r17),r18)),seedMs(r4,r8,clPubKeyEx(r16),encapsCipher(r13,r17))),hFullHs(r1,r2,r3,r4,r5,r6,r8,r9,r10,r11,r12,r13,r14,clPubKeyEx(r16),encapsCipher(r13,r17)))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r16),encapsCipher(r13,r17),r18) \in nw(s)) = true .
	eq (sign(r11) = sign(ca,owner(r11),pubKey(r11))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r16),encapsCipher(r13,r17),r18) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq (decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (shDnM(r7,r2,r1) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (ccsM(r1,r1,r2) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r18 > r15) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq ss(s,r1,r2,r5) = none .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (ccsM(r9,r2,r1) \in nw(s)) = true .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r10,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq m = cf2M(r1,r1,r2,encFin(prf-ckey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-cfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (ccsM(r9,r2,r1) \in nw(s)) = true .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r10,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	eq (m = cf2M(r1,r1,r2,encFin(prf-ckey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-cfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5))))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (ccsM(r9,r2,r1) \in nw(s)) = true .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r10,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (ccsM(r9,r2,r1) \in nw(s)) = true .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (ccsM(r9,r2,r1) \in nw(s)) = true .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r1,r1,r2) \in nw(s)) = true .
	eq (ccsM(r9,r2,r1) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ccsM(r1,r1,r2) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r4 \in ur(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(chello(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r4 \in ur(s)) = false .
	eq m = chM(r1,r1,r2,r3,r4,r5,r6) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(chello(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r4 \in ur(s)) = false .
	eq (m = chM(r1,r1,r2,r3,r4,r5,r6)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(chello(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq ss(s,r1,r2,r5) = none .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(chello2(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (r4 \in ur(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(chello2(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (r4 \in ur(s)) = false .
	eq (cs(ss(s,r1,r2,r5)) \in r6) = true .
	eq m = ch2M(r1,r1,r2,r3,r4,r5,r6) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(chello2(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (r4 \in ur(s)) = false .
	eq (cs(ss(s,r1,r2,r5)) \in r6) = true .
	eq (m = ch2M(r1,r1,r2,r3,r4,r5,r6)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(chello2(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (r4 \in ur(s)) = false .
	eq (cs(ss(s,r1,r2,r5)) \in r6) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(chello2(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2' = r2 .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (k2' = r2) = false .
	eq m = ckexM(r3,r3,r4,clPubKeyEx(r1),encapsCipher(r15,r2),time(s)) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (k2' = r2) = false .
	eq (m = ckexM(r3,r3,r4,clPubKeyEx(r1),encapsCipher(r15,r2),time(s))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq (sign(r13) = sign(ca,owner(r13),pubKey(r13))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq (decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = true .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r9,r4,r3) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r4 \in csign(nw(s))) = true .
	eq m = scertM(intruder,r1,r2,cert(r1,r3,r4)) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCert(s,r1,r2,r3,r4),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r4 \in csign(nw(s))) = true .
	eq (m = scertM(intruder,r1,r2,cert(r1,r3,r4))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCert(s,r1,r2,r3,r4),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r4 \in csign(nw(s))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCert(s,r1,r2,r3,r4),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq m = cfM(intruder,r4,r5,encFin(prf-ckey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-cfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq (m = cfM(intruder,r4,r5,encFin(prf-ckey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-cfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq m = cfM(intruder,r4,r5,encFin(prf-ckey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-cfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (m = cfM(intruder,r4,r5,encFin(prf-ckey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-cfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq m = cfM(intruder,r4,r5,encFin(prf-ckey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-cfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (m = cfM(intruder,r4,r5,encFin(prf-ckey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-cfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = cfM(intruder,r4,r5,encFin(prf-ckey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-cfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = cfM(intruder,r4,r5,encFin(prf-ckey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-cfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = cfM(intruder,r4,r5,encFin(prf-ckey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-cfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = cfM(intruder,r4,r5,encFin(prf-ckey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-cfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = cfM(intruder,r4,r5,encFin(prf-ckey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-cfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = cfM(intruder,r4,r5,encFin(prf-ckey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-cfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = cfM(intruder,r4,r5,encFin(prf-ckey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-cfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = cfM(intruder,r4,r5,encFin(prf-ckey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-cfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = cfM(intruder,r4,r5,encFin(prf-ckey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-cfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = cfM(intruder,r4,r5,encFin(prf-ckey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-cfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = cfM(intruder,r4,r5,encFin(prf-ckey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-cfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = cfM(intruder,r4,r5,encFin(prf-ckey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-cfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq m = cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq (m = cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq m = cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (m = cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq m = cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (m = cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq m = cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (m = cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq m = cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (m = cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq m = cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (m = cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq m = cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (m = cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq m = cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (m = cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq m = cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (m = cf2M(intruder,r1,r2,encFin(prf-ckey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-cfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r1,r2,r3,r4,r5,r6,r7,r9))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq m = ccsM(intruder,r1,r2) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkChangeCS(s,r1,r2),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq (m = ccsM(intruder,r1,r2)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkChangeCS(s,r1,r2),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq m = chM(intruder,r1,r2,r3,r4,r5,r6) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkChello(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (m = chM(intruder,r1,r2,r3,r4,r5,r6)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkChello(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq m = ch2M(intruder,r1,r2,r3,r4,r5,r6) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkChello2(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq (m = ch2M(intruder,r1,r2,r3,r4,r5,r6)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkChello2(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in uclk(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq k2' = r4 .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (k2' = r4) = false .
	eq m = ckexM(intruder,r1,r2,clPubKeyEx(r3),encapsCipher(r5,r4),time(s)) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (k2' = r4) = false .
	eq (m = ckexM(intruder,r1,r2,clPubKeyEx(r3),encapsCipher(r5,r4),time(s))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq m = ckexM(intruder,r1,r2,clPubKeyEx(r3),encapsCipher(r5,r4),time(s)) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCkeyex2(s,r1,r2,r3,r4,r5),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq (m = ckexM(intruder,r1,r2,clPubKeyEx(r3),encapsCipher(r5,r4),time(s))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCkeyex2(s,r1,r2,r3,r4,r5),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCkeyex2(s,r1,r2,r3,r4,r5),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in clkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkCkeyex2(s,r1,r2,r3,r4,r5),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq m = sfM(intruder,r5,r4,encFin(prf-skey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-sfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq (m = sfM(intruder,r5,r4,encFin(prf-skey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-sfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq m = sfM(intruder,r5,r4,encFin(prf-skey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-sfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (m = sfM(intruder,r5,r4,encFin(prf-skey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-sfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq m = sfM(intruder,r5,r4,encFin(prf-skey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-sfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (m = sfM(intruder,r5,r4,encFin(prf-skey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-sfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = sfM(intruder,r5,r4,encFin(prf-skey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-sfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = sfM(intruder,r5,r4,encFin(prf-skey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-sfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = sfM(intruder,r5,r4,encFin(prf-skey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-sfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = sfM(intruder,r5,r4,encFin(prf-skey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-sfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = sfM(intruder,r5,r4,encFin(prf-skey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-sfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = sfM(intruder,r5,r4,encFin(prf-skey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-sfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = sfM(intruder,r5,r4,encFin(prf-skey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-sfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = sfM(intruder,r5,r4,encFin(prf-skey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-sfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = sfM(intruder,r5,r4,encFin(prf-skey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-sfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = sfM(intruder,r5,r4,encFin(prf-skey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-sfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = sfM(intruder,r5,r4,encFin(prf-skey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-sfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = sfM(intruder,r5,r4,encFin(prf-skey(prf-ms(r1,seedMs(r7,r10,r16,r17)),seedHs(r7,r10)),prf-sfin(prf-ms(r1,seedMs(r7,r10,r16,r17)),hFullHs(r4,r5,r6,r7,r8,r9,r10,r11,r12,cert(r5,r2,r3),r13,r14,r15,r16,r17))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in csign(nw(s))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq m = sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq (m = sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq m = sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (m = sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq m = sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (m = sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq m = sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (m = sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq m = sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (m = sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq m = sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (m = sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq m = sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (m = sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq m = sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (m = sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq m = sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (m = sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(r8,seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(r8,seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuite .
	op r6 : -> Sid .
	op s : -> Sys .
	op sd : -> Seed .
	eq m = shM(intruder,r1,r2,r3,r4,r5,r6) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkShello(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuite .
	op r6 : -> Sid .
	op s : -> Sys .
	op sd : -> Seed .
	eq (m = shM(intruder,r1,r2,r3,r4,r5,r6)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkShello(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq m = sh2M(intruder,r1,r2,r3,r4,r5,r6) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkShello2(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (m = sh2M(intruder,r1,r2,r3,r4,r5,r6)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkShello2(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq m = shDnM(intruder,r1,r2) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkShelloDone(s,r1,r2),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq (m = shDnM(intruder,r1,r2)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkShelloDone(s,r1,r2),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in uclk(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq k2' = r4 .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (k2' = r4) = false .
	eq m = skexM(intruder,r1,r2,clPubKeyEx(r3),pqPubKeyEn(r4),encH(priKey(r1),hParams(r5,r6,clPubKeyEx(r3),pqPubKeyEn(r4))),time(s)) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (k2' = r4) = false .
	eq (m = skexM(intruder,r1,r2,clPubKeyEx(r3),pqPubKeyEn(r4),encH(priKey(r1),hParams(r5,r6,clPubKeyEx(r3),pqPubKeyEn(r4))),time(s))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq m = skexM(intruder,r1,r2,clPubKeyEx(r3),pqPubKeyEn(r4),encH(priKey(intruder),hParams(r5,r6,clPubKeyEx(r3),pqPubKeyEn(r4))),time(s)) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSkeyex2(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq (m = skexM(intruder,r1,r2,clPubKeyEx(r3),pqPubKeyEn(r4),encH(priKey(intruder),hParams(r5,r6,clPubKeyEx(r3),pqPubKeyEn(r4))),time(s))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSkeyex2(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSkeyex2(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r3 \in clkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(fkSkeyex2(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq m = heReM(r2,r2,r1) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(helloReq(s,r1,r2),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq (m = heReM(r2,r2,r1)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(helloReq(s,r1,r2),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	op sd : -> Seed .
	eq (cfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(leakHsK(s,r1,r2,r3,r4),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	op sd : -> Seed .
	eq (cfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = false .
	eq (sfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(leakHsK(s,r1,r2,r3,r4),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	op sd : -> Seed .
	eq (cfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = false .
	eq (sfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(leakHsK(s,r1,r2,r3,r4),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(leakLtK(s,r1),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(leakLtK(s,r1),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKey .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	eq (skexM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(leakPKE1(s,r1,r2,r3,r4,r5,r6,r7),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKey .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	eq (skexM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(leakPKE1(s,r1,r2,r3,r4,r5,r6,r7),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKey .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	eq (skexM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(leakPKE2(s,r1,r2,r3,r4,r5,r6,r7),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKey .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	eq (skexM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(leakPKE2(s,r1,r2,r3,r4,r5,r6,r7),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ckexM(r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(leakPKE3(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ckexM(r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(leakPKE3(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ckexM(r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(leakPKE4(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ckexM(r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(leakPKE4(s,r1,r2,r3,r4,r5,r6),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq m = ccsM(r3,r3,r2) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq (m = ccsM(r3,r3,r2)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq ss(s,r2,r3,r6) = none .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r4,r8,r6,cs(ss(s,r2,r3,r6))) \in nw(s)) = true .
	eq m = ccsM(r3,r3,r2) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r4,r8,r6,cs(ss(s,r2,r3,r6))) \in nw(s)) = true .
	eq (m = ccsM(r3,r3,r2)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r4,r8,r6,cs(ss(s,r2,r3,r6))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq m = scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(scert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (m = scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(scert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(scert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(scert(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq dst(m) = intruder .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq src(m) = intruder .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq session(r10,r9,prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq crt(m) = src(m) .
	eq dst(m) = src(m) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true, use inv4' as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq crt(m) = src(m) .
	eq (dst(m) = src(m)) = false .
	red inv4'(s,ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12) ,k2') ,r17) ) implies inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq (crt(m) = src(m)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq (getPqKey(m) = pqPubKeyEn(r12)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq crt(m) = src(m) .
	eq dst(m) = src(m) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq crt(m) = src(m) .
	eq (dst(m) = src(m)) = false .
	eq ms(ss(s,r2,r3,r10)) = prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true, use inv4' as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq crt(m) = src(m) .
	eq (dst(m) = src(m)) = false .
	eq (ms(ss(s,r2,r3,r10)) = prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = false .
	red inv4'(s,ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12) ,k2') ,r17) ) implies inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq (crt(m) = src(m)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq (getPqKey(m) = pqPubKeyEn(r12)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq (sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq (r16 = encapsCipher(pqPubKeyEn(r12),k2')) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq priClKey(r15) = r11 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq k2 = r11 .
	eq (priClKey(r15) = r11) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq dst(m) = intruder .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq src(m) = intruder .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq session(r10,r9,prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq crt(m) = src(m) .
	eq dst(m) = src(m) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true, use inv4' as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq crt(m) = src(m) .
	eq (dst(m) = src(m)) = false .
	red inv4'(s,ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12) ,k2') ,r17) ) implies inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq (crt(m) = src(m)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq (getPqKey(m) = pqPubKeyEn(r12)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq crt(m) = src(m) .
	eq dst(m) = src(m) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq crt(m) = src(m) .
	eq (dst(m) = src(m)) = false .
	eq ms(ss(s,r2,r3,r10)) = prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true, use inv4' as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq crt(m) = src(m) .
	eq (dst(m) = src(m)) = false .
	eq (ms(ss(s,r2,r3,r10)) = prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = false .
	red inv4'(s,ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12) ,k2') ,r17) ) implies inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq (crt(m) = src(m)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq (getPqKey(m) = pqPubKeyEn(r12)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq (sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq (r16 = encapsCipher(pqPubKeyEn(r12),k2')) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq priClKey(r15) = k2 .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k2 & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (k2 = r11) = false .
	eq (priClKey(r15) = k2) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq n = r17 .
	eq (k' = r12) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq k = r11 .
	eq (n = r17) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq dst(m) = intruder .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq src(m) = intruder .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq session(r10,r9,prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq crt(m) = src(m) .
	eq dst(m) = src(m) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true, use inv4' as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq crt(m) = src(m) .
	eq (dst(m) = src(m)) = false .
	red inv4'(s,ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12) ,k2') ,r17) ) implies inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq (crt(m) = src(m)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq (getPqKey(m) = pqPubKeyEn(r12)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq ss(s,r2,r3,r10) = none .
	eq skexM?(m) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq crt(m) = src(m) .
	eq dst(m) = src(m) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq crt(m) = src(m) .
	eq (dst(m) = src(m)) = false .
	eq ms(ss(s,r2,r3,r10)) = prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true, use inv4' as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq crt(m) = src(m) .
	eq (dst(m) = src(m)) = false .
	eq (ms(ss(s,r2,r3,r10)) = prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = false .
	red inv4'(s,ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12) ,k2') ,r17) ) implies inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq getPqKey(m) = pqPubKeyEn(r12) .
	eq (crt(m) = src(m)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = true .
	eq (k2' \in upqk(s)) = false .
	eq (getPqKey(m) = pqPubKeyEn(r12)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = true .
	eq (m \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')) .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-sfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2')))))) = false .
	eq (dst(m) = intruder) = false .
	eq (src(m) = intruder) = false .
	eq (session(r10,r9,prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2')))) = none) = false .
	eq (ss(s,r2,r3,r10) = none) = false .
	eq skexM?(m) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = true .
	eq (sd = seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey((r12 & k2'),r17)),seedMs(r5,r8,r15,encapsCipher(pqPubKeyEn(r12),k2'))),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,encapsCipher(pqPubKeyEn(r12),k2'))))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq r16 = encapsCipher(pqPubKeyEn(r12),k2') .
	eq (ckexM(r14,r2,r3,r15,encapsCipher(pqPubKeyEn(r12),k2'),r17) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq (r16 = encapsCipher(pqPubKeyEn(r12),k2')) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq priClKey(r15) = k .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((k & r11) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq k' = r12 .
	eq (priClKey(r15) = k) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq n = r17 .
	eq (k' = r12) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq k2 = r11 .
	eq (n = r17) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq i = r10 .
	eq (k = r11) = false .
	eq (k2 = r11) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq (i = r10) = false .
	eq m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq b = r3 .
	eq (i = r10) = false .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq (b = r3) = false .
	eq m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq a = r2 .
	eq (b = r3) = false .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq (a = r2) = false .
	eq m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = true .
	eq (a = r2) = false .
	eq (m = sfM(r3,r3,r2,encFin(prf-skey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-sfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r14,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r15)) || pqKey(decaps(r16,r12),r17)),seedMs(r5,r8,r15,r16)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r15,r16)))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (ckexM(r14,r2,r3,r15,r16,r17) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (shDnM(r3,r3,r2) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = true .
	eq (ccsM(r3,r3,r2) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqCipher .
	op r17 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ccsM(r14,r2,r3) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq ss(s,r2,r3,r6) = none .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r4,r8,r6,cs(ss(s,r2,r3,r6))) \in nw(s)) = true .
	eq m = sf2M(r3,r3,r2,encFin(prf-skey(ms(ss(s,r2,r3,r6)),seedHs(r5,r8)),prf-sfin2(ms(ss(s,r2,r3,r6)),hAbbrHs(r2,r3,r4,r5,r6,r7,r8,cs(ss(s,r2,r3,r6)))))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r4,r8,r6,cs(ss(s,r2,r3,r6))) \in nw(s)) = true .
	eq (m = sf2M(r3,r3,r2,encFin(prf-skey(ms(ss(s,r2,r3,r6)),seedHs(r5,r8)),prf-sfin2(ms(ss(s,r2,r3,r6)),hAbbrHs(r2,r3,r4,r5,r6,r7,r8,cs(ss(s,r2,r3,r6))))))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r4,r8,r6,cs(ss(s,r2,r3,r6))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ccsM(r3,r3,r2) \in nw(s)) = true .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ccsM(r3,r3,r2) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4,r5,r6,r7,r8,r9,r10) \in nw(s)) = true .
	eq m = shM(r6,r6,r5,r7,r1,r2,r3) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4,r5,r6,r7,r8,r9,r10) \in nw(s)) = true .
	eq (m = shM(r6,r6,r5,r7,r1,r2,r3)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4,r5,r6,r7,r8,r9,r10) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r2 \in r9) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq ss(s,r3,r4,r7) = none .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r3,r4,r7) = none) = false .
	eq (r1 \in ur(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r3,r4,r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s,r3,r4,r7)) \in r8) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq m = sh2M(r4,r4,r3,r5,r1,r7,cs(ss(s,r3,r4,r7))) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r3,r4,r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s,r3,r4,r7)) \in r8) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (m = sh2M(r4,r4,r3,r5,r1,r7,cs(ss(s,r3,r4,r7)))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r3,r4,r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s,r3,r4,r7)) \in r8) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7,r8) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	eq (ss(s,r3,r4,r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s,r3,r4,r7)) \in r8) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq m = shDnM(r3,r3,r2) .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(shelloDone(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (m = shDnM(r3,r3,r2)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(shelloDone(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(shelloDone(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(shelloDone(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(shelloDone(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(shelloDone(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k2' = r2 .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) .
	eq k' = r2 .
	eq r4 = intruder .
	eq (chM(r3,intruder,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,intruder,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,intruder,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) .
	eq k' = r2 .
	eq r4 = intruder .
	eq (chM(r3,intruder,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,intruder,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,intruder,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) .
	eq k' = r2 .
	eq r4 = intruder .
	eq (chM(r3,intruder,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,intruder,r6,r10,r11,r12) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) .
	eq k' = r2 .
	eq r4 = intruder .
	eq (chM(r3,intruder,r5,r6,r7,r8,r9) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) .
	eq k' = r2 .
	eq (r4 = intruder) = false .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) .
	eq k' = r2 .
	eq (r4 = intruder) = false .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) .
	eq k' = r2 .
	eq (r4 = intruder) = false .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) .
	eq k' = r2 .
	eq (r4 = intruder) = false .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) .
	eq k' = r2 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq r4 = r5 .
	eq (chM(r3,r5,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r5,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r5,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) .
	eq k' = r2 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq r4 = r5 .
	eq (chM(r3,r5,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r5,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r5,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) .
	eq k' = r2 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq r4 = r5 .
	eq (chM(r3,r5,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r5,r6,r10,r11,r12) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) .
	eq k' = r2 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq r4 = r5 .
	eq (chM(r3,r5,r5,r6,r7,r8,r9) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) .
	eq k' = r2 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ss(s,a,b,i) = none .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) .
	eq k' = r2 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq (ss(s,a,b,i) = none) = false .
	eq (k2' \in upqk(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) .
	eq k' = r2 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq (ss(s,a,b,i) = none) = false .
	eq (k2' \in upqk(s)) = false .
	eq ms(ss(s,a,b,i)) = prf-ms(((k & k2) || pqKey((r2 & k2'),n)),sd) .
	eq (skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) \in nw(s)) = true .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true, use inv21 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) .
	eq k' = r2 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq (ss(s,a,b,i) = none) = false .
	eq (k2' \in upqk(s)) = false .
	eq ms(ss(s,a,b,i)) = prf-ms(((k & k2) || pqKey((r2 & k2'),n)),sd) .
	eq (skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) \in nw(s)) = false .
	red inv21(s,a,b,(k&k2) ,r2,k2',sd,n,i) implies inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) .
	eq k' = r2 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq (ss(s,a,b,i) = none) = false .
	eq (k2' \in upqk(s)) = false .
	eq (ms(ss(s,a,b,i)) = prf-ms(((k & k2) || pqKey((r2 & k2'),n)),sd)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s)) .
	eq (k' = r2) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k2' = r2) = false .
	eq (m = skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),time(s))) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op i : -> Sid .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op m : -> Msg .
	op n : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = false .
	red inv27(s,a,b,k,k',k2,k2',i,n,sd,m) implies inv27(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,k,k',k2,k2',i,n,sd,m) .
close

--> Time taken is 21249ms