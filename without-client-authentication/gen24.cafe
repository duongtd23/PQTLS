--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red inv24(init,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PqPubKey .
	op r4 : -> ClPriKeyEx .
	op r5 : -> PqPriKey .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r4),encapsCipher(r3,r5),r6) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cChangeCS(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PqPubKey .
	op r4 : -> ClPriKeyEx .
	op r5 : -> PqPriKey .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r4),encapsCipher(r3,r5),r6) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cChangeCS(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cChangeCS2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r16),encapsCipher(r13,r17),r18) \in nw(s)) = true .
	eq sign(r11) = sign(ca,owner(r11),pubKey(r11)) .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r16),encapsCipher(r13,r17),r18) \in nw(s)) = true .
	eq (sign(r11) = sign(ca,owner(r11),pubKey(r11))) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13) .
	eq (ckexM(r1,r1,r2,clPubKeyEx(r16),encapsCipher(r13,r17),r18) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = true .
	eq (decH(r14,pubKey(r11)) = hParams(r4,r8,r12,r13)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = true .
	eq (skexM(r7,r2,r1,r12,r13,r14,r15) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (shM(r7,r2,r1,r3,r8,r9,r10) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = true .
	eq (chM(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = true .
	eq (scertM(r7,r2,r1,r11) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r18 > r15) = true .
	eq decAsym?(r14,pubKey(r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Cert .
	op r12 : -> ClPubKeyEx .
	op r13 : -> PqPubKey .
	op r14 : -> Cipher .
	op r15 : -> Nat .
	op r16 : -> ClPriKeyEx .
	op r17 : -> PqPriKey .
	op r18 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r18 > r15) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq ss(s,r1,r2,r5) = none .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	eq (sf2M(r7,r2,r1,encFin(prf-skey(ms(ss(s,r1,r2,r5)),seedHs(r4,r8)),prf-sfin2(ms(ss(s,r1,r2,r5)),hAbbrHs(r1,r2,r3,r4,r5,r6,r8,cs(ss(s,r1,r2,r5)))))) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	eq (sh2M(r7,r2,r1,r3,r8,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (ch2M(r1,r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(cfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in ur(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(chello(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in ur(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(chello(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq ss(s,r1,r2,r5) = none .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(chello2(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (r4 \in ur(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(chello2(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (r4 \in ur(s)) = false .
	eq (cs(ss(s,r1,r2,r5)) \in r6) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(chello2(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r1,r2,r5) = none) = false .
	eq (r4 \in ur(s)) = false .
	eq (cs(ss(s,r1,r2,r5)) \in r6) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(chello2(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq r3 = intruder .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq r3 = intruder .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,intruder,r14,r15,r16,r17) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq r3 = intruder .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,intruder,r5,r10,r11,r12) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq r3 = intruder .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = true .
	eq (chM(intruder,intruder,r4,r5,r6,r7,r8) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq r3 = intruder .
	eq (scertM(r9,r4,intruder,r13) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq r4 = intruder .
	eq (scertM(r9,intruder,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,intruder,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,intruder,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,intruder,r3,r14,r15,r16,r17) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq r4 = intruder .
	eq (scertM(r9,intruder,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,intruder,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,intruder,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,intruder,r3,r14,r15,r16,r17) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq r4 = intruder .
	eq (scertM(r9,intruder,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,intruder,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,intruder,r3,r5,r10,r11,r12) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq r4 = intruder .
	eq (scertM(r9,intruder,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,intruder,r5,r6,r7,r8) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq r4 = intruder .
	eq (scertM(r9,intruder,r3,r13) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq r3 = r4 .
	eq (scertM(r9,r4,r4,r13) \in nw(s)) = true .
	eq (chM(r4,r4,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r4,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r4,r14,r15,r16,r17) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq r3 = r4 .
	eq (scertM(r9,r4,r4,r13) \in nw(s)) = true .
	eq (chM(r4,r4,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r4,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r4,r14,r15,r16,r17) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq r3 = r4 .
	eq (scertM(r9,r4,r4,r13) \in nw(s)) = true .
	eq (chM(r4,r4,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r4,r5,r10,r11,r12) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq r3 = r4 .
	eq (scertM(r9,r4,r4,r13) \in nw(s)) = true .
	eq (chM(r4,r4,r4,r5,r6,r7,r8) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq r3 = r4 .
	eq (scertM(r9,r4,r4,r13) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq (r3 = r4) = false .
	eq time(s) = n2 .
	eq r15 = pqPubKeyEn(k') .
	eq (skexM(r9,r4,r3,r14,pqPubKeyEn(k'),r16,r17) \in nw(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq (r3 = r4) = false .
	eq time(s) = n2 .
	eq r15 = pqPubKeyEn(k') .
	eq (skexM(r9,r4,r3,r14,pqPubKeyEn(k'),r16,r17) \in nw(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq (r3 = r4) = false .
	eq time(s) = n2 .
	eq r15 = pqPubKeyEn(k') .
	eq (skexM(r9,r4,r3,r14,pqPubKeyEn(k'),r16,r17) \in nw(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r4) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r4),ltkLeaked(s)) > n) = true .
	eq (skexM(r4,r4,r3,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r3,r3,r4,clPubKeyEx(r1),encapsCipher(pqPubKeyEn(k'),r2),n2) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq (r3 = r4) = false .
	eq time(s) = n2 .
	eq r15 = pqPubKeyEn(k') .
	eq (skexM(r9,r4,r3,r14,pqPubKeyEn(k'),r16,r17) \in nw(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r4) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r4),ltkLeaked(s)) > n) = true .
	eq (skexM(r4,r4,r3,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r3,r3,r4,clPubKeyEx(r1),encapsCipher(pqPubKeyEn(k'),r2),n2) \in nw(s)) = false .
	eq (sf2M(b1,r4,r3,encFin(prf-skey(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),sd2),prf-sfin2(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),h))) \in nw(s)) = true .
	eq (sf2M(r4,r4,r3,encFin(prf-skey(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),sd2),prf-sfin2(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),h))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv26 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq (r3 = r4) = false .
	eq time(s) = n2 .
	eq r15 = pqPubKeyEn(k') .
	eq (skexM(r9,r4,r3,r14,pqPubKeyEn(k'),r16,r17) \in nw(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r4) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r4),ltkLeaked(s)) > n) = true .
	eq (skexM(r4,r4,r3,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r3,r3,r4,clPubKeyEx(r1),encapsCipher(pqPubKeyEn(k'),r2),n2) \in nw(s)) = false .
	eq (sf2M(b1,r4,r3,encFin(prf-skey(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),sd2),prf-sfin2(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),h))) \in nw(s)) = true .
	eq (sf2M(r4,r4,r3,encFin(prf-skey(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),sd2),prf-sfin2(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),h))) \in nw(s)) = false .
	red inv26(s,r3,r4,b1,k,k',r1,r2,sd,sd2,h,ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq (r3 = r4) = false .
	eq time(s) = n2 .
	eq r15 = pqPubKeyEn(k') .
	eq (skexM(r9,r4,r3,r14,pqPubKeyEn(k'),r16,r17) \in nw(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r4) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r4),ltkLeaked(s)) > n) = true .
	eq (skexM(r4,r4,r3,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r3,r3,r4,clPubKeyEx(r1),encapsCipher(pqPubKeyEn(k'),r2),n2) \in nw(s)) = false .
	eq (sf2M(b1,r4,r3,encFin(prf-skey(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),sd2),prf-sfin2(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),h))) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq (r3 = r4) = false .
	eq time(s) = n2 .
	eq r15 = pqPubKeyEn(k') .
	eq (skexM(r9,r4,r3,r14,pqPubKeyEn(k'),r16,r17) \in nw(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r4) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r4),ltkLeaked(s)) > n) = true .
	eq (skexM(r4,r4,r3,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq (r3 = r4) = false .
	eq time(s) = n2 .
	eq r15 = pqPubKeyEn(k') .
	eq (skexM(r9,r4,r3,r14,pqPubKeyEn(k'),r16,r17) \in nw(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r4) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r4),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq (r3 = r4) = false .
	eq time(s) = n2 .
	eq r15 = pqPubKeyEn(k') .
	eq (skexM(r9,r4,r3,r14,pqPubKeyEn(k'),r16,r17) \in nw(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r4) \in' ltkLeaked(s)) = false .
	eq (skexM(r4,r4,r3,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r3,r3,r4,clPubKeyEx(r1),encapsCipher(pqPubKeyEn(k'),r2),n2) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq (r3 = r4) = false .
	eq time(s) = n2 .
	eq r15 = pqPubKeyEn(k') .
	eq (skexM(r9,r4,r3,r14,pqPubKeyEn(k'),r16,r17) \in nw(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r4) \in' ltkLeaked(s)) = false .
	eq (skexM(r4,r4,r3,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r3,r3,r4,clPubKeyEx(r1),encapsCipher(pqPubKeyEn(k'),r2),n2) \in nw(s)) = false .
	eq (sf2M(b1,r4,r3,encFin(prf-skey(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),sd2),prf-sfin2(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),h))) \in nw(s)) = true .
	eq (sf2M(r4,r4,r3,encFin(prf-skey(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),sd2),prf-sfin2(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),h))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv26 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq (r3 = r4) = false .
	eq time(s) = n2 .
	eq r15 = pqPubKeyEn(k') .
	eq (skexM(r9,r4,r3,r14,pqPubKeyEn(k'),r16,r17) \in nw(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r4) \in' ltkLeaked(s)) = false .
	eq (skexM(r4,r4,r3,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r3,r3,r4,clPubKeyEx(r1),encapsCipher(pqPubKeyEn(k'),r2),n2) \in nw(s)) = false .
	eq (sf2M(b1,r4,r3,encFin(prf-skey(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),sd2),prf-sfin2(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),h))) \in nw(s)) = true .
	eq (sf2M(r4,r4,r3,encFin(prf-skey(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),sd2),prf-sfin2(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),h))) \in nw(s)) = false .
	red inv26(s,r3,r4,b1,k,k',r1,r2,sd,sd2,h,ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq (r3 = r4) = false .
	eq time(s) = n2 .
	eq r15 = pqPubKeyEn(k') .
	eq (skexM(r9,r4,r3,r14,pqPubKeyEn(k'),r16,r17) \in nw(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r4) \in' ltkLeaked(s)) = false .
	eq (skexM(r4,r4,r3,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r3,r3,r4,clPubKeyEx(r1),encapsCipher(pqPubKeyEn(k'),r2),n2) \in nw(s)) = false .
	eq (sf2M(b1,r4,r3,encFin(prf-skey(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),sd2),prf-sfin2(prf-ms(((k & r1) || pqKey((k' & r2),n2)),sd),h))) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq (r3 = r4) = false .
	eq time(s) = n2 .
	eq r15 = pqPubKeyEn(k') .
	eq (skexM(r9,r4,r3,r14,pqPubKeyEn(k'),r16,r17) \in nw(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r4) \in' ltkLeaked(s)) = false .
	eq (skexM(r4,r4,r3,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq (r3 = r4) = false .
	eq time(s) = n2 .
	eq r15 = pqPubKeyEn(k') .
	eq (skexM(r9,r4,r3,r14,pqPubKeyEn(k'),r16,r17) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq (r3 = r4) = false .
	eq time(s) = n2 .
	eq (r15 = pqPubKeyEn(k')) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq b = r4 .
	eq (r3 = intruder) = false .
	eq (r4 = intruder) = false .
	eq (r3 = r4) = false .
	eq (time(s) = n2) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq a = r3 .
	eq (b = r4) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq k2' = r2 .
	eq (a = r3) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq k2 = r1 .
	eq (k2' = r2) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq sign(r13) = sign(ca,owner(r13),pubKey(r13)) .
	eq (k2 = r1) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15) .
	eq (sign(r13) = sign(ca,owner(r13),pubKey(r13))) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = true .
	eq (decH(r16,pubKey(r13)) = hParams(r6,r10,r14,r15)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = true .
	eq (skexM(r9,r4,r3,r14,r15,r16,r17) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	eq (shM(r9,r4,r3,r5,r10,r11,r12) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = true .
	eq (chM(r3,r3,r4,r5,r6,r7,r8) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (scertM(r9,r4,r3,r13) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Cert .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKey .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16,pubKey(r13)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(ckeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in csign(nw(s))) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCert(s,r1,r2,r3,r4),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in csign(nw(s))) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCert(s,r1,r2,r3,r4),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkChangeCS(s,r1,r2),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkChello(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkChello2(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCkeyex(s,r1,r2,r3,r4,r5),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCkeyex2(s,r1,r2,r3,r4,r5),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCkeyex2(s,r1,r2,r3,r4,r5),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> PqPubKey .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkCkeyex2(s,r1,r2,r3,r4,r5),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1),nw(s)) = false .
	eq ($clKey1(pmsClKey(r1)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKey .
	op r15 : -> Cipher .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqCipher .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq r1 = intruder .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = ((k & k2) || pqKey((k' & k2'),n2))) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq (b1 = intruder) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq a = r2 .
	eq (b = r1) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq (a = r2) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq r1 = intruder .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = ((k & k2) || pqKey((k' & k2'),n2))) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq (b1 = intruder) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq (b = r1) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (a = r2) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq r1 = intruder .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = ((k & k2) || pqKey((k' & k2'),n2))) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq (b1 = intruder) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r2 .
	eq (b = r1) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (a = r2) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq r1 = intruder .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = ((k & k2) || pqKey((k' & k2'),n2))) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq (b1 = intruder) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq (b = r1) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (a = r2) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq r1 = intruder .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = ((k & k2) || pqKey((k' & k2'),n2))) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq (b1 = intruder) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq (b = r1) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (a = r2) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq r1 = intruder .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = ((k & k2) || pqKey((k' & k2'),n2))) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq (b1 = intruder) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq (b = r1) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (a = r2) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq r1 = intruder .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = ((k & k2) || pqKey((k' & k2'),n2))) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq (b1 = intruder) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq (b = r1) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (a = r2) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq r1 = intruder .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = ((k & k2) || pqKey((k' & k2'),n2))) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq (b1 = intruder) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq (b = r1) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (a = r2) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq r1 = intruder .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = true .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = true .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r1),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv9 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = true .
	eq (sf2M(intruder,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	eq (sf2M(r1,r1,r2,encFin(prf-skey(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),seedHs(r4,r7)),prf-sfin2(prf-ms(((k & k2) || pqKey((k' & k2'),n2)),seedMs(r4,r7,r10,r11)),hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)))) \in nw(s)) = false .
	red inv9(s,r2,r1,k,k',k2,k2',ci,n,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = true .
	eq (ckexM(r2,r2,r1,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(k'),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq sd2 = seedHs(r4,r7) .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (skexM(r1,r1,r2,clPubKeyEx(k),pqPubKeyEn(k'),ci,n) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq sd = seedMs(r4,r7,r10,r11) .
	eq (sd2 = seedHs(r4,r7)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9) .
	eq (sd = seedMs(r4,r7,r10,r11)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = true .
	eq (h = hAbbrHs(r2,r1,r3,r4,r5,r6,r7,r9)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = true .
	eq existPqPriKexM(pqKey((k' & k2'),n2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = ((k & k2) || pqKey((k' & k2'),n2)) .
	eq (k \in clkLeaked(s)) = false .
	eq (k2 \in clkLeaked(s)) = false .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k2' \in pqkLeaked(s)) = false .
	eq existClPriKexM((k & k2),nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq b1 = intruder .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = ((k & k2) || pqKey((k' & k2'),n2))) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq b = r1 .
	eq (b1 = intruder) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r2 .
	eq (b = r1) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (a = r2) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq ($pqKey1(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	eq ($pqKey2(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqCipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8),nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8),nw(s)) = false .
	eq ($clKey1(pmsClKey(r8)) \in clkLeaked(s)) = false .
	eq ($clKey2(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuite .
	op r6 : -> Sid .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkShello(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkShello2(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkShelloDone(s,r1,r2),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in uclk(s)) = false .
	eq (r4 \in upqk(s)) = false .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSkeyex(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSkeyex2(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSkeyex2(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKey .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(fkSkeyex2(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(helloReq(s,r1,r2),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (cfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(leakHsK(s,r1,r2,r3,r4),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (cfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = false .
	eq (sfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(leakHsK(s,r1,r2,r3,r4),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (cfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = false .
	eq (sfM(r1,r1,r2,encFin(r3,r4)) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(leakHsK(s,r1,r2,r3,r4),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(leakLtK(s,r1),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq b = r1 .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(leakLtK(s,r1),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (b = r1) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(leakLtK(s,r1),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKey .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(leakPKE1(s,r1,r2,r3,r4,r5,r6,r7),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKey .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(leakPKE1(s,r1,r2,r3,r4,r5,r6,r7),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKey .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(leakPKE2(s,r1,r2,r3,r4,r5,r6,r7),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKey .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(leakPKE2(s,r1,r2,r3,r4,r5,r6,r7),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(leakPKE3(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(leakPKE3(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(leakPKE4(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(leakPKE4(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op r7 : -> Cipher .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (cfM(r1,r2,r3,r7) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r4,r5,r6) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op r7 : -> Cipher .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (cfM(r1,r2,r3,r7) \in nw(s)) = true .
	eq (ckexM(r1,r2,r3,r4,r5,r6) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op r7 : -> Cipher .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (shDnM(r3,r3,r2) \in nw(s)) = true .
	eq (cfM(r1,r2,r3,r7) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqCipher .
	op r6 : -> Nat .
	op r7 : -> Cipher .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (shDnM(r3,r3,r2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(sChangeCS(s,r1,r2,r3,r4,r5,r6,r7),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (sh2M(r2,r2,r1,r3,r6,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(sChangeCS2(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (sh2M(r2,r2,r1,r3,r6,r5,cs(ss(s,r1,r2,r5))) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(sChangeCS2(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuite .
	op r6 : -> Sid .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (shM(r2,r2,r1,r3,r4,r5,r6) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(scert(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuite .
	op r6 : -> Sid .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (shM(r2,r2,r1,r3,r4,r5,r6) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(scert(s,r1,r2,r3,r4,r5,r6),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqCipher .
	op r16 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r14,r15,r16) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r1,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r14)) || pqKey(decaps(r15,r12),r16)),seedMs(r5,r8,r14,r15)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r14)) || pqKey(decaps(r15,r12),r16)),seedMs(r5,r8,r14,r15)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqCipher .
	op r16 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r14,r15,r16) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = true .
	eq (cfM(r1,r2,r3,encFin(prf-ckey(prf-ms(((r11 & priClKey(r14)) || pqKey(decaps(r15,r12),r16)),seedMs(r5,r8,r14,r15)),seedHs(r5,r8)),prf-cfin(prf-ms(((r11 & priClKey(r14)) || pqKey(decaps(r15,r12),r16)),seedMs(r5,r8,r14,r15)),hFullHs(r2,r3,r4,r5,r6,r7,r8,r9,r10,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3))),clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r14,r15)))) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqCipher .
	op r16 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r14,r15,r16) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3,r3,r2,clPubKeyEx(r11),pqPubKeyEn(r12),encH(priKey(r3),hParams(r5,r8,clPubKeyEx(r11),pqPubKeyEn(r12))),r13) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqCipher .
	op r16 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r14,r15,r16) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = true .
	eq (scertM(r3,r3,r2,cert(r3,pubKey(r3),sign(ca,r3,pubKey(r3)))) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqCipher .
	op r16 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r14,r15,r16) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (shM(r3,r3,r2,r4,r8,r9,r10) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqCipher .
	op r16 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r14,r15,r16) \in nw(s)) = true .
	eq (chM(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKey .
	op r13 : -> Nat .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqCipher .
	op r16 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1,r2,r3,r14,r15,r16) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(sfinish(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq ss(s,r2,r3,r6) = none .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r4,r8,r6,cs(ss(s,r2,r3,r6))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = true .
	eq (sh2M(r3,r3,r2,r4,r8,r6,cs(ss(s,r2,r3,r6))) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r2,r3,r6) = none) = false .
	eq (ch2M(r1,r2,r3,r4,r5,r6,r7) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(sfinish2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4,r5,r6,r7,r8,r9,r10) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4,r5,r6,r7,r8,r9,r10) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(shello(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq ss(s,r3,r4,r7) = none .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r3,r4,r7) = none) = false .
	eq (r1 \in ur(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r3,r4,r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s,r3,r4,r7)) \in r8) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7,r8) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r3,r4,r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s,r3,r4,r7)) \in r8) = true .
	eq (ch2M(r2,r3,r4,r5,r6,r7,r8) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s,r3,r4,r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s,r3,r4,r7)) \in r8) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(shello2(s,r1,r2,r3,r4,r5,r6,r7,r8),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Rand .
	op r5 : -> ClPriKeyEx .
	op r6 : -> PqPriKey .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r2,r2,r1,clPubKeyEx(r5),pqPubKeyEn(r6),encH(priKey(r2),hParams(r3,r4,clPubKeyEx(r5),pqPubKeyEn(r6))),r7) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(shelloDone(s,r1,r2,r3,r4,r5,r6,r7),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Rand .
	op r4 : -> Rand .
	op r5 : -> ClPriKeyEx .
	op r6 : -> PqPriKey .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r2,r2,r1,clPubKeyEx(r5),pqPubKeyEn(r6),encH(priKey(r2),hParams(r3,r4,clPubKeyEx(r5),pqPubKeyEn(r6))),r7) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(shelloDone(s,r1,r2,r3,r4,r5,r6,r7),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq r4 = intruder .
	eq (chM(r3,intruder,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,intruder,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,intruder,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq r4 = intruder .
	eq (chM(r3,intruder,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,intruder,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,intruder,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq r4 = intruder .
	eq (chM(r3,intruder,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,intruder,r6,r10,r11,r12) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq r4 = intruder .
	eq (chM(r3,intruder,r5,r6,r7,r8,r9) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(intruder,intruder,r4,cert(intruder,pubKey(intruder),sign(ca,intruder,pubKey(intruder)))) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(intruder,intruder,r4,r6,r10,r11,r12) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq r5 = intruder .
	eq (chM(r3,r4,intruder,r6,r7,r8,r9) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq r4 = r5 .
	eq (chM(r3,r5,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r5,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r5,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq r4 = r5 .
	eq (chM(r3,r5,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r5,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r5,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq r4 = r5 .
	eq (chM(r3,r5,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r5,r6,r10,r11,r12) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq r4 = r5 .
	eq (chM(r3,r5,r5,r6,r7,r8,r9) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r5) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r5),ltkLeaked(s)) > n) = true .
	eq (ckexM(r4,r4,r5,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(r2),k2'),n2) \in nw(s)) = true .
	eq (skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),n) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r5) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r5),ltkLeaked(s)) > n) = true .
	eq (ckexM(r4,r4,r5,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(r2),k2'),n2) \in nw(s)) = true .
	eq (skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),n) \in nw(s)) = false .
	eq (sf2M(b1,r5,r4,encFin(prf-skey(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),sd2),prf-sfin2(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),h))) \in nw(s)) = true .
	eq (sf2M(r5,r5,r4,encFin(prf-skey(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),sd2),prf-sfin2(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),h))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv25 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r5) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r5),ltkLeaked(s)) > n) = true .
	eq (ckexM(r4,r4,r5,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(r2),k2'),n2) \in nw(s)) = true .
	eq (skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),n) \in nw(s)) = false .
	eq (sf2M(b1,r5,r4,encFin(prf-skey(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),sd2),prf-sfin2(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),h))) \in nw(s)) = true .
	eq (sf2M(r5,r5,r4,encFin(prf-skey(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),sd2),prf-sfin2(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),h))) \in nw(s)) = false .
	red inv25(s,r4,r5,b1,r1,r2,k2,k2',sd,sd2,h,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r5) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r5),ltkLeaked(s)) > n) = true .
	eq (ckexM(r4,r4,r5,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(r2),k2'),n2) \in nw(s)) = true .
	eq (skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),n) \in nw(s)) = false .
	eq (sf2M(b1,r5,r4,encFin(prf-skey(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),sd2),prf-sfin2(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),h))) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r5) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r5),ltkLeaked(s)) > n) = true .
	eq (ckexM(r4,r4,r5,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(r2),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r5) \in' ltkLeaked(s)) = true .
	eq (timeLeak(priKey(r5),ltkLeaked(s)) > n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r5) \in' ltkLeaked(s)) = false .
	eq (ckexM(r4,r4,r5,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(r2),k2'),n2) \in nw(s)) = true .
	eq (skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),n) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r5) \in' ltkLeaked(s)) = false .
	eq (ckexM(r4,r4,r5,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(r2),k2'),n2) \in nw(s)) = true .
	eq (skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),n) \in nw(s)) = false .
	eq (sf2M(b1,r5,r4,encFin(prf-skey(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),sd2),prf-sfin2(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),h))) \in nw(s)) = true .
	eq (sf2M(r5,r5,r4,encFin(prf-skey(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),sd2),prf-sfin2(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),h))) \in nw(s)) = true .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true, use inv25 as a lemma
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r5) \in' ltkLeaked(s)) = false .
	eq (ckexM(r4,r4,r5,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(r2),k2'),n2) \in nw(s)) = true .
	eq (skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),n) \in nw(s)) = false .
	eq (sf2M(b1,r5,r4,encFin(prf-skey(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),sd2),prf-sfin2(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),h))) \in nw(s)) = true .
	eq (sf2M(r5,r5,r4,encFin(prf-skey(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),sd2),prf-sfin2(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),h))) \in nw(s)) = false .
	red inv25(s,r4,r5,b1,r1,r2,k2,k2',sd,sd2,h,n2) implies inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r5) \in' ltkLeaked(s)) = false .
	eq (ckexM(r4,r4,r5,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(r2),k2'),n2) \in nw(s)) = true .
	eq (skexM(r5,r5,r4,clPubKeyEx(r1),pqPubKeyEn(r2),encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))),n) \in nw(s)) = false .
	eq (sf2M(b1,r5,r4,encFin(prf-skey(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),sd2),prf-sfin2(prf-ms(((k2 & r1) || pqKey((r2 & k2'),n2)),sd),h))) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq time(s) = n .
	eq (k2' \in pqkLeaked(s)) = false .
	eq (r2 \in pqkLeaked(s)) = false .
	eq (priKey(r5) \in' ltkLeaked(s)) = false .
	eq (ckexM(r4,r4,r5,clPubKeyEx(k2),encapsCipher(pqPubKeyEn(r2),k2'),n2) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2))) .
	eq (time(s) = n) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq b = r5 .
	eq (r4 = intruder) = false .
	eq (r5 = intruder) = false .
	eq (r4 = r5) = false .
	eq (ci = encH(priKey(r5),hParams(r7,r10,clPubKeyEx(r1),pqPubKeyEn(r2)))) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq a = r4 .
	eq (b = r5) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq k' = r2 .
	eq (a = r4) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq k = r1 .
	eq (k' = r2) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = true .
	eq (k = r1) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = true .
	eq (scertM(r5,r5,r4,cert(r5,pubKey(r5),sign(ca,r5,pubKey(r5)))) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = true .
	eq (shM(r5,r5,r4,r6,r10,r11,r12) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> true
open INV .
	op a : -> Prin .
	op b : -> Prin .
	op b1 : -> Prin .
	op ci : -> Cipher .
	op h : -> Hash .
	op k : -> ClPriKeyEx .
	op k' : -> PqPriKey .
	op k2 : -> ClPriKeyEx .
	op k2' : -> PqPriKey .
	op n : -> Nat .
	op n2 : -> Nat .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKey .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3,r4,r5,r6,r7,r8,r9) \in nw(s)) = false .
	red inv24(s,a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) implies inv24(skeyex(s,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12),a,b,b1,k,k',k2,k2',sd,sd2,h,ci,n,n2) .
close

--> Time taken is 56737ms